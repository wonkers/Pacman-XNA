using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace xna_Pac_Man
{
    class Map
    {
        public static int[,] tiles = {  {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 },
                                        {1,1,1,1,0,0,50,0,0,0,0,0,1,1,1,1,1,2,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,2,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,2,1,1,1,1,1,0,1,1,0,0,0,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,2,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,2,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,1,1,1,1,1,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1 },
                                        {1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1 },
                                        {1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1 },
                                        {1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,1,1,1,1,1,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1 },
                                        {1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,2,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,2,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,2,1,1,1,1,1,0,1,1,0,0,0,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,2,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1 },
                                        {1,1,1,1,0,0,50,0,0,0,0,0,1,1,1,1,1,2,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1 },
                                        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 },
                                        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 },
                                        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 }
                                        };
        public static bool[,] intersections = new bool[30,36];
        public Map()
        {
            
        }
        public static bool check_tile(int direction, int X, int Y)
        {
            //0 = left, 1 = up, 2 = right, 3 = down
            switch (direction)
            {
                case 0:
                    int x = X - 1;
                    if (x < 0) x = 0;
                    if (tiles[x , Y] == 1)
                    {
                        return true;
                    }
                    else return false;
                case 1:
                    if (tiles[X, Y - 1 ] == 1)
                    {
                        return true;
                    }
                    else return false;
                case 2:
                    if (tiles[X + 1, Y] == 1)
                    {
                        return true;
                    }
                    else return false;
                case 3:
                    if (tiles[X, Y + 1] == 1)
                    {
                        return true;
                    }
                    else return false;
                default:
                    return false;
            }
        }
    }

}
